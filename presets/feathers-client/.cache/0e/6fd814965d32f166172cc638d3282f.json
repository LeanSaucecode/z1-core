{"id":"EDhw","dependencies":[{"name":"/Users/barry/Documents/code/z1-core/presets/feathers-client/package.json","includedInParent":true,"mtime":1578423419331},{"name":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/package.json","includedInParent":true,"mtime":1576530433368},{"name":"debug","loc":{"line":6,"column":20},"parent":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/index.js","resolved":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/node_modules/debug/src/browser.js"},{"name":"component-emitter","loc":{"line":7,"column":22},"parent":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/index.js","resolved":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/component-emitter/index.js"},{"name":"./binary","loc":{"line":8,"column":21},"parent":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/index.js","resolved":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/binary.js"},{"name":"isarray","loc":{"line":9,"column":22},"parent":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/index.js","resolved":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/node_modules/isarray/index.js"},{"name":"./is-buffer","loc":{"line":10,"column":20},"parent":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/index.js","resolved":"/Users/barry/Documents/code/z1-core/presets/feathers-client/node_modules/socket.io-parser/is-buffer.js"}],"generated":{"js":"var $EDhw$exports={},$EDhw$var$debug=$parcel$require(\"EDhw\",\"debug\")(\"socket.io-parser\"),$EDhw$var$Emitter=$parcel$require(\"EDhw\",\"component-emitter\"),$EDhw$var$binary=$parcel$require(\"EDhw\",\"./binary\"),$EDhw$var$isArray=$parcel$require(\"EDhw\",\"isarray\"),$EDhw$var$isBuf=$parcel$require(\"EDhw\",\"./is-buffer\"),$EDhw$export$protocol=4;$EDhw$exports.protocol=$EDhw$export$protocol;var $EDhw$export$types=[\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"ACK\",\"ERROR\",\"BINARY_EVENT\",\"BINARY_ACK\"];$EDhw$exports.types=$EDhw$export$types;var $EDhw$export$CONNECT=0;$EDhw$exports.CONNECT=$EDhw$export$CONNECT;var $EDhw$export$DISCONNECT=1;$EDhw$exports.DISCONNECT=$EDhw$export$DISCONNECT;var $EDhw$export$EVENT=2;$EDhw$exports.EVENT=$EDhw$export$EVENT;var $EDhw$export$ACK=3;$EDhw$exports.ACK=$EDhw$export$ACK;var $EDhw$export$ERROR=4;$EDhw$exports.ERROR=$EDhw$export$ERROR;var $EDhw$export$BINARY_EVENT=5;$EDhw$exports.BINARY_EVENT=$EDhw$export$BINARY_EVENT;var $EDhw$export$BINARY_ACK=6;$EDhw$exports.BINARY_ACK=$EDhw$export$BINARY_ACK;var $EDhw$export$Encoder=$EDhw$var$Encoder;$EDhw$exports.Encoder=$EDhw$export$Encoder;var $EDhw$export$Decoder=$EDhw$var$Decoder;function $EDhw$var$Encoder(){}$EDhw$exports.Decoder=$EDhw$export$Decoder;var $EDhw$var$ERROR_PACKET=$EDhw$exports.ERROR+'\"encode error\"';function $EDhw$var$encodeAsString(r){var $=\"\"+r.type;if($EDhw$exports.BINARY_EVENT!==r.type&&$EDhw$exports.BINARY_ACK!==r.type||($+=r.attachments+\"-\"),r.nsp&&\"/\"!==r.nsp&&($+=r.nsp+\",\"),null!=r.id&&($+=r.id),null!=r.data){var e=$EDhw$var$tryStringify(r.data);if(!1===e)return $EDhw$var$ERROR_PACKET;$+=e}return $EDhw$var$debug(\"encoded %j as %s\",r,$),$}function $EDhw$var$tryStringify(r){try{return JSON.stringify(r)}catch($){return!1}}function $EDhw$var$encodeAsBinary(r,$){$EDhw$var$binary.removeBlobs(r,function(r){var e=$EDhw$var$binary.deconstructPacket(r),t=$EDhw$var$encodeAsString(e.packet),o=e.buffers;o.unshift(t),$(o)})}function $EDhw$var$Decoder(){this.reconstructor=null}function $EDhw$var$decodeString(r){var $=0,e={type:Number(r.charAt(0))};if(null==$EDhw$exports.types[e.type])return $EDhw$var$error(\"unknown packet type \"+e.type);if($EDhw$exports.BINARY_EVENT===e.type||$EDhw$exports.BINARY_ACK===e.type){for(var t=\"\";\"-\"!==r.charAt(++$)&&(t+=r.charAt($),$!=r.length););if(t!=Number(t)||\"-\"!==r.charAt($))throw new Error(\"Illegal attachments\");e.attachments=Number(t)}if(\"/\"===r.charAt($+1))for(e.nsp=\"\";++$;){if(\",\"===(a=r.charAt($)))break;if(e.nsp+=a,$===r.length)break}else e.nsp=\"/\";var o=r.charAt($+1);if(\"\"!==o&&Number(o)==o){for(e.id=\"\";++$;){var a;if(null==(a=r.charAt($))||Number(a)!=a){--$;break}if(e.id+=r.charAt($),$===r.length)break}e.id=Number(e.id)}if(r.charAt(++$)){var n=$EDhw$var$tryParse(r.substr($));if(!(!1!==n&&(e.type===$EDhw$exports.ERROR||$EDhw$var$isArray(n))))return $EDhw$var$error(\"invalid payload\");e.data=n}return $EDhw$var$debug(\"decoded %s as %j\",r,e),e}function $EDhw$var$tryParse(r){try{return JSON.parse(r)}catch($){return!1}}function $EDhw$var$BinaryReconstructor(r){this.reconPack=r,this.buffers=[]}function $EDhw$var$error(r){return{type:$EDhw$exports.ERROR,data:\"parser error: \"+r}}$EDhw$var$Encoder.prototype.encode=function(r,$){($EDhw$var$debug(\"encoding packet %j\",r),$EDhw$exports.BINARY_EVENT===r.type||$EDhw$exports.BINARY_ACK===r.type)?$EDhw$var$encodeAsBinary(r,$):$([$EDhw$var$encodeAsString(r)])},$EDhw$var$Emitter($EDhw$var$Decoder.prototype),$EDhw$var$Decoder.prototype.add=function(r){var $;if(\"string\"==typeof r)$=$EDhw$var$decodeString(r),$EDhw$exports.BINARY_EVENT===$.type||$EDhw$exports.BINARY_ACK===$.type?(this.reconstructor=new $EDhw$var$BinaryReconstructor($),0===this.reconstructor.reconPack.attachments&&this.emit(\"decoded\",$)):this.emit(\"decoded\",$);else{if(!$EDhw$var$isBuf(r)&&!r.base64)throw new Error(\"Unknown type: \"+r);if(!this.reconstructor)throw new Error(\"got binary data when not reconstructing a packet\");($=this.reconstructor.takeBinaryData(r))&&(this.reconstructor=null,this.emit(\"decoded\",$))}},$EDhw$var$Decoder.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},$EDhw$var$BinaryReconstructor.prototype.takeBinaryData=function(r){if(this.buffers.push(r),this.buffers.length===this.reconPack.attachments){var $=$EDhw$var$binary.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),$}return null},$EDhw$var$BinaryReconstructor.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]};"},"sourceMaps":null,"error":null,"hash":"755fb3f11f0bd0de5d7b3b305e0ae758","cacheData":{"env":{},"imports":{"$require$debug":["debug","*"],"$require$component-emitter":["component-emitter","*"],"$require$./binary":["./binary","*"],"$require$isarray":["isarray","*"],"$require$./is-buffer":["./is-buffer","*"]},"exports":{"protocol":"$EDhw$export$protocol","types":"$EDhw$export$types","CONNECT":"$EDhw$export$CONNECT","DISCONNECT":"$EDhw$export$DISCONNECT","EVENT":"$EDhw$export$EVENT","ACK":"$EDhw$export$ACK","ERROR":"$EDhw$export$ERROR","BINARY_EVENT":"$EDhw$export$BINARY_EVENT","BINARY_ACK":"$EDhw$export$BINARY_ACK","Encoder":"$EDhw$export$Encoder","Decoder":"$EDhw$export$Decoder"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}